{"version":3,"sources":["pages/Page.tsx","assets/chess-img.jpeg","features/sk-posts/PostsSlice.ts","store/hooks.ts","features/sk-posts/PostScreen.tsx","firebase-config.ts","features/sk-posts/PostsScreen.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","features/o-nama/ONamaScreen.tsx","pages/Onama/ONamaPage.tsx","features/contact/ContactScreen.tsx","pages/ContactPage/ContactPage.tsx","components/imgModal/ImgModal.tsx","features/sk-posts/OnePostScreen.tsx","features/admin/AdminSlice.ts","features/admin/AdminScreen.tsx","pages/AdminPage/AdminPage.tsx","features/admin/AdminPanel.tsx","pages/AdminPage/AdminPanelPage.tsx","routes/RouteComponentMap.ts","routes/path-constants.ts","routes/ProtectedRoute.tsx","assets/sk-kozara-logo-img.jpeg","components/navbar/Navbar.tsx","routes/Routes.tsx","App.tsx","services/common/qs.ts","services/common/url.ts","configuration/config.ts","configuration/index.ts","services/common/BaseService.ts","features/posts/PostService.ts","features/posts/postsSlice.ts","features/counter/counterSlice.ts","features/todos/TodoService.ts","features/todos/todoSlice.ts","store/store.ts","index.tsx"],"names":["Page","props","children","useEffect","window","scrollTo","initialState","naseAktivnosti","id","uuid","date","Date","toLocaleString","heading","description","img","ChessImg","skolaSaha","najaveTurnira","redirectPostData","img_2","img_3","img_4","img_5","img_6","img_7","img_8","img_9","img_10","postsSlice","createSlice","name","reducers","handleRedirectPostData","state","action","payload","AddNewPost","tag","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","PostHolder","styled","div","Heading","h4","p","Description","Img","FirstPart","PostScreen","post","history","useHistory","dispatch","onClick","push","dangerouslySetInnerHTML","__html","src","alt","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getStorage","getFirestore","Header","h1","Div","Wrapper","PostsScreen","useState","aktivnosti","setAktivnosti","najavePosts","setNajavePosts","skolaSahaPosts","setSkolaSahaPosts","aktivnostiCollectionRef","collection","najaveCollectionRef","skolaCollectionRef","qa","query","orderBy","qn","qs","getAktivnostiPosts","a","getDocs","aktivnostiData","docs","map","doc","data","getNajavePosts","najaveData","getSkolaSahaPosts","skolaSahaData","Content","main","HomePage","NotFoundPage","to","ContactWrapper","Paragraph","Icons","IconButton","ContactScreen","href","target","sx","fontSize","style","color","fontWeight","width","height","title","loading","ONamaPage","ONamaScreen","position","top","left","transform","bgcolor","border","boxShadow","display","zIndex","borderRadius","BtnStyle","button","ImgModal","url","closeModal","Box","maxWidth","maxHeight","ImgWrapper","OnePostScreen","dataFromHomeScreen","postsState","imgState","setImgState","openModal","setOpenModal","handleOpenModal","adminSlice","username1","password1","adminPanelData","username","password","validationData","FormHolder","Form","form","Para","inputLabelColor","Button","AdminScreen","adminState","setUsername","setPassword","onSubmit","e","preventDefault","alert","TextField","className","classes","inputs","placeholder","type","label","variant","value","onChange","required","InputLabelProps","minWidth","borderBottom","margin","AdminPage","RulesWrap","Rules","AdminPanel","setHeading","setDescription","setTag","addNewPostToDatabaseAktivnostiCollection","addDoc","createdAt","serverTimestamp","addNewPostToDatabaseSkolaCollection","addNewPostToDatabaseNajaveCollection","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","rows","multiline","pathComponentArray","path","component","ContactPage","AdminPanelScreen","authenticationService","ProtectedRoute","exact","Component","render","pathname","from","location","Nav","nav","Ul","ul","Li","li","LogoImg","HeadingName","h3","HamburgerMenu","Navbar","menu","setMenu","Logo","prevState","Routes","pc","GlobalStyle","createGlobalStyle","App","stringify","object","decodeURIComponent","parse","build","args","arr","Array","join","dotenv","config","API_BASE_URL","process","REACT_APP_API_BASE_URL","get","local","HttpClient","service","axios","defaults","timeout","baseURL","withCredentials","this","tempURL","delete","head","put","patch","queryString","getPosts","baseService","BaseService","combine","response","getPostsAsync","createAsyncThunk","isLoading","postsList","extraReducers","builder","addCase","pending","fulfilled","counterSlice","increment","decrement","incrementByAmount","getTodos","getTodosAsync","todosSlice","todosList","store","configureStore","reducer","counter","counterReducer","posts","postsReducer","todos","todoReducer","postReducer","adminReducer","ReactDOM","fallback","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d1fda5.chunk.js","sourcesContent":["import React, { FC, useEffect } from 'react';\n\nconst Page: FC = (props) => {\n  const { children } = props;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return <main>{children}</main>;\n};\n\nexport default Page;\n","export default __webpack_public_path__ + \"static/media/chess-img.f5903893.jpeg\";","import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\nimport ChessImg from '../../assets/chess-img.jpeg';\n\ninterface PostsData {\n  id: string;\n  description: string;\n  date: string;\n  heading: string;\n  img: any;\n}\n\ninterface InitialState {\n  naseAktivnosti: PostsData[];\n  najaveTurnira: PostsData[];\n  skolaSaha: PostsData[];\n  redirectPostData: {\n    id: string;\n    description: string;\n    date: string;\n    heading: string;\n    img: any;\n    img_2: any;\n    img_3: any;\n    img_4: any;\n    img_5: any;\n    img_6: any;\n    img_7: any;\n    img_8: any;\n    img_9: any;\n    img_10: any;\n  };\n}\n\nconst initialState: InitialState = {\n  naseAktivnosti: [\n    {\n      id: uuid(),\n      date: new Date().toLocaleString(),\n      heading:\n        'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Pariatur, eveniet.',\n      description: 'dummy description about post, description text...',\n      img: ChessImg,\n    },\n    {\n      id: uuid(),\n      date: new Date().toLocaleString(),\n      heading:\n        'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Pariatur, eveniet.',\n      description: 'dummy description text...',\n      img: ChessImg,\n    },\n    {\n      id: uuid(),\n      date: new Date().toLocaleString(),\n      heading:\n        'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Pariatur, eveniet.',\n      description: 'dummy description text...',\n      img: ChessImg,\n    },\n  ],\n  skolaSaha: [\n    {\n      id: uuid(),\n      date: new Date().toLocaleString(),\n      heading:\n        'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Pariatur, eveniet.',\n      description: 'dummy description about post, description text...',\n      img: ChessImg,\n    },\n  ],\n\n  najaveTurnira: [\n    {\n      id: uuid(),\n      date: new Date().toLocaleString(),\n      heading:\n        'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Pariatur, eveniet.',\n      description: 'dummy description about post, description text...',\n      img: ChessImg,\n    },\n    {\n      id: uuid(),\n      date: new Date().toLocaleString(),\n      heading:\n        'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Pariatur, eveniet.',\n      description: 'dummy description text...',\n      img: ChessImg,\n    },\n    {\n      id: uuid(),\n      date: new Date().toLocaleString(),\n      heading:\n        'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Pariatur, eveniet.',\n      description: 'dummy description text...',\n      img: ChessImg,\n    },\n  ],\n  redirectPostData: {\n    id: '',\n    description: '',\n    date: '',\n    heading: '',\n    img: '',\n    img_2: '',\n    img_3: '',\n    img_4: '',\n    img_5: '',\n    img_6: '',\n    img_7: '',\n    img_8: '',\n    img_9: '',\n    img_10: '',\n  },\n};\n\n// const aktivnostiCollectionRef = collection(db, 'aktivnosti');\n// const najaveCollectionRef = collection(db, 'najave');\n// const skolaCollectionRef = collection(db, 'skola');\n\n// const addPostToDatabase = createAsyncThunk(\n//   'postsslice/addPostToDatabase',\n//   async (data) => {\n//     await addDoc(aktivnostiCollectionRef, data);\n//   },\n// );\n\nconst postsSlice = createSlice({\n  name: 'postsslice',\n  initialState,\n  reducers: {\n    handleRedirectPostData(state, action) {\n      state.redirectPostData = action.payload;\n    },\n    AddNewPost(state, action) {\n      if (action.payload.tag === 'najave') {\n        state.najaveTurnira = [action.payload, ...state.najaveTurnira];\n      } else if (action.payload.tag === 'aktivnosti') {\n        state.naseAktivnosti = [action.payload, ...state.naseAktivnosti];\n      } else {\n        state.skolaSaha = [action.payload, ...state.skolaSaha];\n      }\n    },\n  },\n});\n\nexport const { handleRedirectPostData, AddNewPost } = postsSlice.actions;\nexport default postsSlice.reducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { AppDispatch, RootState } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { handleRedirectPostData } from './PostsSlice';\nimport { useAppDispatch } from '../../store/hooks';\n\ninterface Post {\n  post: PostData;\n}\nexport interface PostData {\n  id: string;\n  date: string;\n  heading: string;\n  description: string;\n  img: string;\n  imgTwo: any;\n  imgThree: any;\n  imgFour: any;\n  imgFive: any;\n  imgSix: any;\n  imgSeven: any;\n  imgEight: any;\n  imgNine: any;\n  imgTen: any;\n}\n\nconst PostHolder = styled.div`\n  border: none;\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n  padding: 30px;\n  margin: 10px 0;\n  cursor: pointer;\n  overflow: hidden;\n  display: flex;\n  justify-content: space-between;\n  max-height: 200px;\n  min-width: 900px;\n\n  @media (max-width: 1024px) {\n    min-width: auto;\n  }\n  @media (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\nconst Heading = styled.h4`\n  color: darkorange;\n`;\n\nconst Date = styled.p`\n  color: red;\n`;\nconst Description = styled.p`\n  color: #000;\n`;\nconst Img = styled.div`\n  transition: all 0.4s ease;\n  overflow: hidden;\n  flex: 0 0 20%;\n  display: flex;\n  align-items: center;\n\n  img {\n    width: 170px;\n    height: 170px;\n  }\n\n  :hover {\n    opacity: 0.8;\n    transform: scale(1.05);\n  }\n\n  @media (max-width: 767px) {\n    display: none;\n  }\n`;\nconst FirstPart = styled.div`\n  flex: 0 0 70%;\n`;\n\nconst PostScreen: FC<Post> = ({ post }) => {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n\n  const handleRedirectToPost = () => {\n    dispatch(handleRedirectPostData(post));\n    history.push(`/objava/${post.id}`);\n  };\n\n  return (\n    <PostHolder onClick={() => handleRedirectToPost()}>\n      <FirstPart>\n        <Date>{post.date}</Date>\n        <Heading dangerouslySetInnerHTML={{ __html: post.heading }} />\n        <Description dangerouslySetInnerHTML={{ __html: post.description }} />\n      </FirstPart>\n      <Img>\n        <img src={post.img} alt=\"img\" />\n      </Img>\n    </PostHolder>\n  );\n};\nexport default PostScreen;\n","/* eslint-disable import/prefer-default-export */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from '@firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyA2gRXEed3crMHhBgKMoyzbF8iDggwfm6U',\n  authDomain: 'sk-kozara.firebaseapp.com',\n  projectId: 'sk-kozara',\n  storageBucket: 'sk-kozara.appspot.com',\n  messagingSenderId: '620358009427',\n  appId: '1:620358009427:web:d2a604753d221a65e3bca6',\n  measurementId: 'G-EDM127H917',\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const storage = getStorage(app);\nexport const db = getFirestore(app);\n","/* eslint-disable operator-linebreak */\nimport React, { FC, useState, useEffect } from 'react';\nimport { collection, getDocs, query, orderBy } from 'firebase/firestore';\n// import { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport PostScreen from './PostScreen';\n// import { useAppSelector } from '../../store/hooks';\nimport { db } from '../../firebase-config';\n// import ChessImg from '../../assets/chess-img.jpeg';\n\nconst Header = styled.h1`\n  text-transform: uppercase;\n  font-size: 20px;\n\n  @media (max-width: 767px) {\n    text-align: center;\n  }\n`;\nconst Div = styled.div`\n  margin: 5px 0;\n`;\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 10px 0;\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n  padding: 10px;\n`;\n\nconst PostsScreen: FC = () => {\n  const [aktivnosti, setAktivnosti] = useState([]);\n  const [najavePosts, setNajavePosts] = useState([]);\n  const [skolaSahaPosts, setSkolaSahaPosts] = useState([]);\n\n  const aktivnostiCollectionRef = collection(db, 'aktivnosti');\n  const najaveCollectionRef = collection(db, 'najave');\n  const skolaCollectionRef = collection(db, 'skola');\n\n  const qa = query(aktivnostiCollectionRef, orderBy('createdAt', 'desc'));\n  const qn = query(najaveCollectionRef, orderBy('createdAt', 'desc'));\n  const qs = query(skolaCollectionRef, orderBy('createdAt', 'desc'));\n\n  useEffect(() => {\n    const getAktivnostiPosts = async () => {\n      const aktivnostiData = await getDocs(qa);\n      setAktivnosti(\n        aktivnostiData.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        })),\n      );\n    };\n\n    const getNajavePosts = async () => {\n      const najaveData = await getDocs(qn);\n      setNajavePosts(\n        najaveData.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        })),\n      );\n    };\n    const getSkolaSahaPosts = async () => {\n      const skolaSahaData = await getDocs(qs);\n      setSkolaSahaPosts(\n        skolaSahaData.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        })),\n      );\n    };\n\n    getAktivnostiPosts();\n    getNajavePosts();\n    getSkolaSahaPosts();\n  }, []);\n\n  return (\n    <>\n      <Div>\n        <Header>Najave Turnira</Header>\n        <Wrapper>\n          {najavePosts &&\n            najavePosts.map((post) => <PostScreen post={post} key={post.id} />)}\n        </Wrapper>\n\n        <Header>Nase aktivnosti</Header>\n        <Wrapper>\n          {aktivnosti.map((post) => (\n            <PostScreen post={post} key={post.id} />\n          ))}\n        </Wrapper>\n\n        <Header>Skola saha</Header>\n        <Wrapper>\n          {skolaSahaPosts &&\n            skolaSahaPosts.map((post) => (\n              <PostScreen post={post} key={post.id} />\n            ))}\n        </Wrapper>\n      </Div>\n    </>\n  );\n};\nexport default PostsScreen;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Page from '../Page';\nimport PostsScreen from '../../features/sk-posts/PostsScreen';\n\nexport const Content = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n`;\n\nconst HomePage = () => (\n  <Page>\n    <Content>\n      <PostsScreen />\n    </Content>\n  </Page>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Page from '../Page';\n\nconst NotFoundPage = () => (\n  <Page>\n    <p>\n      This is not the page that you are looking for!\n      <br />\n      <NavLink to=\"/\">Go Home</NavLink>\n    </p>\n  </Page>\n);\n\nexport default NotFoundPage;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport InstagramIcon from '@mui/icons-material/Instagram';\n\nconst ContactWrapper = styled.div`\n  max-width: 1200px;\n  margin: 10px auto;\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.16);\n  padding: 20px;\n`;\nconst Paragraph = styled.p`\n  color: #000;\n  font-size: 22px;\n`;\nconst Icons = styled.div`\n  display: flex;\n`;\nconst IconButton = styled.a`\n  cursor: pointer;\n  background: none;\n  border: none;\n  transition: all 0.5s ease;\n  color: #4267b2;\n  :hover {\n    color: #405de6;\n  }\n  svg {\n    font-size: 40px;\n  }\n`;\n\nconst ContactScreen: FC = () => (\n  <ContactWrapper>\n    <Icons>\n      <IconButton\n        href=\"https://www.facebook.com/%C5%A0K-Kozara-Gradi%C5%A1ka-104948812039944\"\n        target=\"_blank\"\n      >\n        <FacebookIcon sx={{ fontSize: '22px' }} />\n      </IconButton>\n      <IconButton\n        style={{ color: '#C13584' }}\n        href=\"https://www.google.com/\"\n        target=\"_blank\"\n      >\n        <InstagramIcon sx={{ fontSize: '22px' }} />\n      </IconButton>\n    </Icons>\n    <Paragraph>\n      Sahovski klub <span style={{ fontWeight: 600 }}>Kozara</span> Gradiska je\n      sportska organizacija koja se bavi organizacijom takmicenja i promocijom\n      sahovske igre. Nas cilj je predstaviti nas rad i objavljivati infromacije\n      o sahu.\n    </Paragraph>\n    <iframe\n      src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d489.7992327890823!2d17.25154505999277!3d45.142073162554354!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47675e9fc127edc1%3A0xd3948779b6e81f44!2sKninska%2C%20Gradi%C5%A1ka!5e0!3m2!1shr!2sba!4v1650571262629!5m2!1shr!2sba\"\n      width=\"600\"\n      height=\"450\"\n      title=\"mapa saha\"\n      loading=\"lazy\"\n    />\n  </ContactWrapper>\n);\n\nexport default ContactScreen;\n","import React, { FC } from 'react';\nimport ONamaScreen from '../../features/o-nama/ONamaScreen';\n\nconst ONamaPage: FC = () => (\n  <>\n    <ONamaScreen />\n  </>\n);\n\nexport default ONamaPage;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport InstagramIcon from '@mui/icons-material/Instagram';\n\nconst ContactWrapper = styled.div`\n  max-width: 1200px;\n  margin: 10px auto;\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.16);\n  padding: 20px;\n`;\nconst Paragraph = styled.p`\n  color: #000;\n  font-size: 22px;\n`;\nconst Icons = styled.div`\n  display: flex;\n`;\nconst IconButton = styled.a`\n  cursor: pointer;\n  background: none;\n  border: none;\n  transition: all 0.5s ease;\n  color: #4267b2;\n  :hover {\n    color: #405de6;\n  }\n  svg {\n    font-size: 40px;\n  }\n`;\n\nconst ContactScreen: FC = () => (\n  <ContactWrapper>\n    <Icons>\n      <IconButton\n        href=\"https://www.facebook.com/%C5%A0K-Kozara-Gradi%C5%A1ka-104948812039944\"\n        target=\"_blank\"\n      >\n        <FacebookIcon sx={{ fontSize: '22px' }} />\n      </IconButton>\n      <IconButton\n        style={{ color: '#C13584' }}\n        href=\"https://www.google.com/\"\n        target=\"_blank\"\n      >\n        <InstagramIcon sx={{ fontSize: '22px' }} />\n      </IconButton>\n    </Icons>\n    <Paragraph>\n      Sahovski klub <span style={{ fontWeight: 600 }}>Kozara</span> Gradiska je\n      sportska organizacija koja se bavi organizacijom takmicenja i promocijom\n      sahovske igre. Nas cilj je predstaviti nas rad i objavljivati infromacije\n      o sahu.\n    </Paragraph>\n    <iframe\n      src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d489.7992327890823!2d17.25154505999277!3d45.142073162554354!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47675e9fc127edc1%3A0xd3948779b6e81f44!2sKninska%2C%20Gradi%C5%A1ka!5e0!3m2!1shr!2sba!4v1650571262629!5m2!1shr!2sba\"\n      width=\"600\"\n      height=\"450\"\n      title=\"mapa saha\"\n      loading=\"lazy\"\n    />\n  </ContactWrapper>\n);\n\nexport default ContactScreen;\n","import React from 'react';\nimport Page from '../Page';\nimport ContactScreen from '../../features/contact/ContactScreen';\n\nconst HomePage = () => (\n  <Page>\n    <ContactScreen />\n  </Page>\n);\n\nexport default HomePage;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport styled from 'styled-components';\n\nconst style = {\n  position: 'absolute' as 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  display: 'flex',\n  zIndex: 99999,\n  borderRadius: '50px',\n};\nconst BtnStyle = styled.button`\n  max-width: 30px;\n  max-height: 30px;\n  background: transparent;\n  border: none;\n  font-size: 22px;\n  cursor: pointer;\n  transition: ease 0.4s all;\n  &:hover {\n    background: #efdbdb;\n  }\n`;\n\nconst Img = styled.img`\n  @media (max-width: 767px) {\n    width: 300px;\n  }\n\n  @media (max-width: 480px) {\n    width: 200px;\n  }\n`;\n\nconst ImgModal = ({ url, closeModal }) => (\n  <div>\n    <Box sx={style}>\n      <Img\n        src={url}\n        alt=\"slika\"\n        style={{ maxWidth: '700px', maxHeight: '700px' }}\n      />\n      <BtnStyle onClick={closeModal}>X</BtnStyle>\n    </Box>\n  </div>\n);\n\nexport default ImgModal;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useAppSelector } from '../../store/hooks';\nimport ImgModal from '../../components/imgModal/ImgModal';\n// import { PostData } from './PostScreen';\n\nconst PostHolder = styled.div`\n  border: none;\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n  padding: 30px;\n  margin: 10px 0;\n  overflow-y: scroll;\n  height: 100vh;\n`;\nconst Heading = styled.h4`\n  color: darkorange;\n`;\n\nconst Date = styled.p`\n  color: red;\n`;\nconst Description = styled.p`\n  color: #000;\n`;\nconst ImgWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst Img = styled.div`\n  /* flex: 0 0 33%; */\n  overflow: hidden;\n  img {\n    cursor: pointer;\n    transition: ease 0.4s all;\n    max-width: 400px;\n    max-height: 400px;\n\n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n`;\n\n// interface Data extends PostData {}\n\nconst OnePostScreen = () => {\n  const dataFromHomeScreen = useAppSelector(\n    (state) => state.postsState.redirectPostData,\n  );\n  const [imgState, setImgState] = useState<string>('');\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleOpenModal = (url: string) => {\n    setImgState(url);\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <PostHolder>\n      {openModal && <ImgModal url={imgState} closeModal={handleCloseModal} />}\n      <Date>{dataFromHomeScreen.date}</Date>\n      <Heading\n        dangerouslySetInnerHTML={{ __html: dataFromHomeScreen.heading }}\n      />\n      <Description\n        dangerouslySetInnerHTML={{ __html: dataFromHomeScreen.description }}\n      />\n\n      <ImgWrapper>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img)}>\n          {dataFromHomeScreen.img && (\n            <img src={dataFromHomeScreen.img} alt=\"img\" />\n          )}\n        </Img>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img_2)}>\n          {dataFromHomeScreen.img_2 && (\n            <img src={dataFromHomeScreen.img_2} alt=\"img2\" />\n          )}\n        </Img>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img_3)}>\n          {dataFromHomeScreen.img_3 && (\n            <img src={dataFromHomeScreen.img_3} alt=\"img3\" />\n          )}\n        </Img>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img_4)}>\n          {dataFromHomeScreen.img_4 && (\n            <img src={dataFromHomeScreen.img_4} alt=\"img4\" />\n          )}\n        </Img>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img_5)}>\n          {dataFromHomeScreen.img_5 && (\n            <img src={dataFromHomeScreen.img_5} alt=\"img5\" />\n          )}\n        </Img>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img_6)}>\n          {dataFromHomeScreen.img_6 && (\n            <img src={dataFromHomeScreen.img_6} alt=\"img6\" />\n          )}\n        </Img>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img_7)}>\n          {dataFromHomeScreen.img_7 && (\n            <img src={dataFromHomeScreen.img_7} alt=\"img7\" />\n          )}\n        </Img>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img_8)}>\n          {dataFromHomeScreen.img_8 && (\n            <img src={dataFromHomeScreen.img_8} alt=\"img8\" />\n          )}\n        </Img>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img_9)}>\n          {dataFromHomeScreen.img_9 && (\n            <img src={dataFromHomeScreen.img_9} alt=\"img9\" />\n          )}\n        </Img>\n        <Img onClick={() => handleOpenModal(dataFromHomeScreen.img_10)}>\n          {dataFromHomeScreen.img_10 && (\n            <img src={dataFromHomeScreen.img_10} alt=\"img10\" />\n          )}\n        </Img>\n      </ImgWrapper>\n    </PostHolder>\n  );\n};\n\nexport default OnePostScreen;\n","/* eslint-disable operator-linebreak */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { AdminStore } from './adminmodel';\n\nconst initialState: AdminStore = {\n  username1: 'skkozara',\n  password1: 'kozaragradiska2022',\n  adminPanelData: {\n    username: '',\n    password: '',\n  },\n};\nconst adminSlice = createSlice({\n  name: 'adminSlice',\n  initialState,\n  reducers: {\n    validationData(state, action) {\n      state.adminPanelData = action.payload;\n    },\n  },\n});\n\nexport const { validationData } = adminSlice.actions;\nexport default adminSlice.reducer;\n","/* eslint-disable no-useless-computed-key */\n/* eslint-disable no-alert */\nimport React, { FC, useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../../store/hooks';\nimport { validationData } from './AdminSlice';\nimport classes from './Admin.module.scss';\n\nconst FormHolder = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Form = styled.form`\n  max-width: 500px;\n  margin: 100px 0;\n\n  @media (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nconst Para = styled.p`\n  text-transform: uppercase;\n  font-weight: 600;\n`;\n\nconst inputLabelColor = {\n  style: {\n    color: '#000',\n  },\n};\nconst Button = styled.button`\n  background: #a2d1e0;\n  border: none;\n  padding: 12px 42px;\n  border-radius: 50px;\n  cursor: pointer;\n  transition: all 0.4s ease;\n  font-size: 18px;\n\n  :hover {\n    background: #93b8c4;\n  }\n`;\n\nconst AdminScreen: FC = () => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const { username1, password1 } = useAppSelector((state) => state.adminState);\n  const [username, setUsername] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n\n  const handleAdminValidation = () => {\n    if (username1 === username && password1 === password) {\n      setUsername('');\n      setPassword('');\n      history.push('/admin-panel');\n    } else {\n      alert('Not a valid username or password');\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(validationData({ username, password }));\n    handleAdminValidation();\n  };\n\n  return (\n    <>\n      <FormHolder>\n        <Form onSubmit={handleSubmit}>\n          <Para>Log in to Admin Panel</Para>\n          <TextField\n            className={classes.inputs}\n            placeholder=\"Username\"\n            type=\"text\"\n            label=\"Username\"\n            variant=\"outlined\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n            InputLabelProps={inputLabelColor}\n            sx={{\n              minWidth: '470px',\n              borderBottom: '#000',\n              ['@media (max-width:780px)']: {\n                // eslint-disable-line no-useless-computed-key\n                width: '90%',\n                minWidth: '280px',\n                maxWidth: '100%',\n              },\n            }}\n          />\n\n          <TextField\n            placeholder=\"Password\"\n            type=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            InputLabelProps={inputLabelColor}\n            sx={{\n              minWidth: '470px',\n              borderBottom: '#000',\n              margin: '10px 0',\n              ['@media (max-width:780px)']: {\n                // eslint-disable-line no-useless-computed-key\n                width: '90%',\n                minWidth: '280px',\n                maxWidth: '100%',\n              },\n            }}\n          />\n          <Button>Log In</Button>\n        </Form>\n      </FormHolder>\n    </>\n  );\n};\n\nexport default AdminScreen;\n","import React from 'react';\nimport Page from '../Page';\nimport AdminScreen from '../../features/admin/AdminScreen';\n\nconst AdminPage = () => (\n  <Page>\n    <AdminScreen />\n  </Page>\n);\n\nexport default AdminPage;\n","/* eslint-disable operator-linebreak */\nimport React, { useEffect, useState } from 'react';\nimport { collection, addDoc, serverTimestamp } from '@firebase/firestore';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { TextField } from '@mui/material';\n// import { v4 as uuid } from 'uuid';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { useAppSelector } from '../../store/hooks';\nimport { db } from '../../firebase-config';\n// import DraftTextEditor from '../../components/draft-js/DraftTextEditor';\n// import NewChessImg from '../../assets/chess-img.jpeg';\n\nconst Wrapper = styled.div`\n  max-width: 80%;\n  margin: 20px auto;\n`;\nconst FormHolder = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Form = styled.form`\n  min-width: 1000px;\n  margin: 100px 0;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 767px) {\n    min-width: auto;\n  }\n`;\nconst Para = styled.p`\n  text-transform: uppercase;\n  font-weight: 600;\n`;\n\nconst inputLabelColor = {\n  style: {\n    color: '#000',\n  },\n};\nconst Button = styled.button`\n  background: #a2d1e0;\n  border: none;\n  padding: 12px 42px;\n  border-radius: 50px;\n  cursor: pointer;\n  transition: all 0.4s ease;\n  font-size: 18px;\n\n  :hover {\n    background: #93b8c4;\n  }\n`;\nconst RulesWrap = styled.div``;\n\nconst Rules = styled.p``;\n\nconst AdminPanel = () => {\n  const history = useHistory();\n  // const dispatch = useAppDispatch();\n  const { username1, password1 } = useAppSelector((state) => state.adminState);\n  const { adminPanelData } = useAppSelector((state) => state.adminState);\n  const [heading, setHeading] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [tag, setTag] = useState<string>('');\n\n  const handleRedirectAdmin = () => {\n    if (\n      adminPanelData.username !== username1 ||\n      adminPanelData.password !== password1\n    ) {\n      history.push('/admin');\n    }\n  };\n\n  useEffect(() => {\n    handleRedirectAdmin();\n  }, []);\n\n  const aktivnostiCollectionRef = collection(db, 'aktivnosti');\n  const najaveCollectionRef = collection(db, 'najave');\n  const skolaCollectionRef = collection(db, 'skola');\n\n  const handleTagChange = (e: SelectChangeEvent) => {\n    setTag(e.target.value as string);\n  };\n\n  const addNewPostToDatabaseAktivnostiCollection = async () => {\n    await addDoc(aktivnostiCollectionRef, {\n      // id: uuid(),\n      date: new Date().toLocaleString(),\n      createdAt: serverTimestamp(),\n      tag,\n      heading,\n      description,\n      img: '',\n      img_2: '',\n      img_3: '',\n      img_4: '',\n      img_5: '',\n      img_6: '',\n      img_7: '',\n      img_8: '',\n      img_9: '',\n      img_10: '',\n    });\n  };\n\n  const addNewPostToDatabaseSkolaCollection = async () => {\n    await addDoc(skolaCollectionRef, {\n      // id: uuid(),\n      date: new Date().toLocaleString(),\n      createdAt: serverTimestamp(),\n      tag,\n      heading,\n      description,\n      img: '',\n      img_2: '',\n      img_3: '',\n      img_4: '',\n      img_5: '',\n      img_6: '',\n      img_7: '',\n      img_8: '',\n      img_9: '',\n      img_10: '',\n    });\n  };\n\n  const addNewPostToDatabaseNajaveCollection = async () => {\n    await addDoc(najaveCollectionRef, {\n      // id: uuid(),\n      date: new Date().toLocaleString(),\n      createdAt: serverTimestamp(),\n      tag,\n      heading,\n      description,\n      img: '',\n      img_2: '',\n      img_3: '',\n      img_4: '',\n      img_5: '',\n      img_6: '',\n      img_7: '',\n      img_8: '',\n      img_9: '',\n      img_10: '',\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (tag === 'aktivnosti') {\n      addNewPostToDatabaseAktivnostiCollection();\n    } else if (tag === 'najave') {\n      addNewPostToDatabaseNajaveCollection();\n    } else {\n      addNewPostToDatabaseSkolaCollection();\n    }\n\n    setHeading('');\n    setDescription('');\n    setTag('');\n  };\n\n  return (\n    <>\n      <Wrapper>\n        WELCOME TO ADMIN PANEL\n        <RulesWrap>\n          <Rules>Break line: &lt;/br&gt;</Rules>\n          <Rules>\n            Bold text: &lt;b&gt; tekst koji treba biti boldiran ide ovdje u\n            sredinu &lt;/b&gt;\n          </Rules>\n          <Rules>\n            Link: &lt;a href=&apos;url linka ovdje&apos;&gt; u sredinu tekst\n            koji ce biti prikazan umjesto linka ili ponovo zalijepiti link\n            &lt;/a&gt;\n          </Rules>\n        </RulesWrap>\n        <FormHolder>\n          <Form onSubmit={handleSubmit}>\n            <Para>Objavi novi post</Para>\n\n            <Box sx={{ minWidth: 120 }}>\n              <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">\n                  Tag objave\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={tag}\n                  label=\"Tag Objave\"\n                  onChange={handleTagChange}\n                >\n                  <MenuItem value=\"najave\">Najave turnira</MenuItem>\n                  <MenuItem value=\"aktivnosti\">Nase aktivnosti</MenuItem>\n                  <MenuItem value=\"skola\">Skola saha</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n\n            <TextField\n              placeholder=\"Dodaj Naslov\"\n              type=\"text\"\n              label=\"Dodaj Naslov\"\n              variant=\"outlined\"\n              value={heading}\n              onChange={(e) => setHeading(e.target.value)}\n              required\n              rows={2}\n              multiline\n              InputLabelProps={inputLabelColor}\n              sx={{\n                minWidth: '600px',\n                margin: '10px 0',\n              }}\n            />\n\n            <TextField\n              placeholder=\"Dodaj opis\"\n              type=\"text\"\n              label=\"Dodaj opis\"\n              variant=\"outlined\"\n              multiline\n              rows={20}\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              InputLabelProps={inputLabelColor}\n              sx={{ minWidth: '600px', margin: '10px 0' }}\n            />\n\n            {/* <div>Text editor wrapper</div>\n            <DraftTextEditor />\n            <div>Text editor end wrapping</div> */}\n\n            <Button>Objavi</Button>\n          </Form>\n        </FormHolder>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default AdminPanel;\n","import React from 'react';\nimport Page from '../Page';\nimport AdminPanel from '../../features/admin/AdminPanel';\n\nconst AdminPage = () => (\n  <Page>\n    <AdminPanel />\n  </Page>\n);\n\nexport default AdminPage;\n","import { FC } from 'react';\nimport {\n  HOME_PATH,\n  O_NAMA_PATH,\n  CONTACT_PATH,\n  ADMIN_PANEL,\n  ADMIN_PANEL_SCREEN,\n} from './path-constants';\n\nimport HomePage from '../pages/HomePage/HomePage';\nimport NotFoundPage from '../pages/NotFoundPage/NotFoundPage';\nimport ONamaPage from '../pages/Onama/ONamaPage';\nimport ContactPage from '../pages/ContactPage/ContactPage';\nimport OnePostScreen from '../features/sk-posts/OnePostScreen';\nimport AdminScreen from '../pages/AdminPage/AdminPage';\nimport AdminPanelScreen from '../pages/AdminPage/AdminPanelPage';\n\ninterface IPathComponent {\n  path?: string;\n  component: FC;\n}\n\nconst pathComponentArray: IPathComponent[] = [];\n\npathComponentArray.push({ path: HOME_PATH, component: HomePage });\npathComponentArray.push({ path: O_NAMA_PATH, component: ONamaPage });\npathComponentArray.push({ path: CONTACT_PATH, component: ContactPage });\npathComponentArray.push({ path: ADMIN_PANEL, component: AdminScreen });\npathComponentArray.push({\n  path: ADMIN_PANEL_SCREEN,\n  component: AdminPanelScreen,\n});\npathComponentArray.push({ path: '/objava/:id', component: OnePostScreen });\npathComponentArray.push({ component: NotFoundPage });\n\nexport { pathComponentArray };\nexport default {};\n","/* eslint-disable operator-linebreak */\nexport const HOME_PATH = '/http://DevaDeveloper.github.io/sk-kozara';\nexport const CONTACT_PATH = 'http://DevaDeveloper.github.io/sk-kozara/kontakt';\nexport const O_NAMA_PATH = 'http://DevaDeveloper.github.io/sk-kozara/o-nama';\nexport const ADMIN_PANEL = 'http://DevaDeveloper.github.io/sk-kozara/admin';\nexport const ADMIN_PANEL_SCREEN =\n  'http://DevaDeveloper.github.io/sk-kozara/admin-panel';\n// export const ONE_POST = '/objava';\n","import React, { FC } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\ninterface ProtectedRouteProps {\n  path: string;\n  exact: boolean;\n  component: FC;\n}\n\nconst authenticationService = {\n  currentUserValue: true,\n  roles: ['ADMIN'],\n};\n// TODO Implement case-specific logic\nexport const ProtectedRoute: FC<ProtectedRouteProps> = ({\n  path,\n  exact,\n  component: Component,\n}) => (\n  <Route\n    path={path}\n    exact={exact}\n    render={(props) => {\n      const currentUser = authenticationService.currentUserValue;\n      if (currentUser) {\n        return <Component />;\n      }\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        return (\n          <Redirect\n            to={{ pathname: '/login', state: { from: props.location } }}\n          />\n        );\n      }\n\n      // authorised so return component\n      return <Component />;\n    }}\n  />\n);\n\nexport default ProtectedRoute;\n","export default __webpack_public_path__ + \"static/media/sk-kozara-logo-img.91d0797c.jpeg\";","import React, { FC, useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Logo from '../../assets/sk-kozara-logo-img.jpeg';\n\nconst Nav = styled.nav`\n  height: 70px;\n  background: linear-gradient(to right, #0f0c29, #302b63, #24243e);\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: 767px) {\n    flex-direction: column;\n    height: auto;\n  }\n`;\n\nconst Ul = styled.ul`\n  list-style: none;\n  display: flex;\n  margin: 0;\n  animation: openMenu 0.4s ease-out forwards;\n\n  @media (max-width: 767px) {\n    flex-direction: column;\n\n    @keyframes openMenu {\n      0% {\n        opacity: 0;\n        transform: translateY(-100%);\n      }\n      100% {\n        opacity: 1;\n        transform: translateY(0%);\n      }\n    }\n  }\n  @media (max-width: 480px) {\n    padding: 0;\n  }\n`;\nconst Li = styled.li`\n  margin: 0 10px;\n  cursor: pointer;\n\n  a {\n    text-decoration: none;\n    color: #fff;\n    transition: all 0.5s ease;\n    margin: 0 auto;\n    text-align: center;\n    :last-child {\n      margin-right: 40px;\n      @media (max-width: 480px) {\n        margin-right: 0;\n        text-align: center;\n      }\n    }\n    :hover {\n      border-bottom: 1px solid lightblue;\n    }\n  }\n  @media (max-width: 480px) {\n    margin-right: 0;\n    text-align: center;\n  }\n`;\nconst LogoImg = styled.div`\n  margin-left: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  img {\n    max-width: 50px;\n    max-height: 50px;\n    border-radius: 50%;\n    margin-right: 20px;\n  }\n\n  @media (max-width: 767px) {\n    margin: 0 auto;\n  }\n`;\nconst HeadingName = styled.h3`\n  color: #fff;\n  text-align: center;\n`;\n\nconst HamburgerMenu = styled.div`\n  color: #fff;\n  display: none;\n  padding-top: 3px;\n\n  @media (max-width: 767px) {\n    display: flex;\n    margin-left: 20px;\n  }\n`;\n\nconst Navbar: FC = () => {\n  const history = useHistory();\n  const [menu, setMenu] = useState<boolean>(true);\n\n  const handleToggleMenu = () => {\n    setMenu((prevState) => !prevState);\n  };\n\n  return (\n    <>\n      <Nav>\n        <LogoImg onClick={() => history.push('/')}>\n          <img src={Logo} alt=\"logo\" />\n          <HeadingName>SK Kozara Gradiska</HeadingName>\n          <HamburgerMenu onClick={handleToggleMenu}>\n            <MenuIcon />\n          </HamburgerMenu>\n        </LogoImg>\n        {menu && (\n          <Ul>\n            <Li>\n              <NavLink to=\"/\">Pocetna</NavLink>\n            </Li>\n\n            <Li>\n              {' '}\n              <NavLink to=\"/kontakt\">Kontakt</NavLink>\n            </Li>\n            <Li>\n              <NavLink to=\"/o-nama\">O nama</NavLink>\n            </Li>\n          </Ul>\n        )}\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport { pathComponentArray } from './RouteComponentMap';\nimport { ProtectedRoute } from './ProtectedRoute';\nimport Navbar from '../components/navbar/Navbar';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Navbar />\n    <Switch>\n      {pathComponentArray.map((pc) => (\n        <ProtectedRoute\n          key={uuid()}\n          path={pc.path}\n          exact\n          component={pc.component}\n        />\n      ))}\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport './App.css';\nimport { createGlobalStyle } from 'styled-components';\nimport Routes from './routes/Routes';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Poppins', sans-serif;\n    font-size: 16px;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import qs from 'qs';\n\nconst stringify = (object: object) => decodeURIComponent(qs.stringify(object));\n\nconst parse = (value : string) => qs.parse(value);\n\nexport {\n  stringify,\n  parse,\n};\n","const build = (...args: any[]) => {\n  const arr = Array.from(args);\n  return arr.join('/');\n};\n\nexport { build };\nexport default {};\n","import dotenv from 'dotenv';\n\ndotenv.config();\n\nconst { REACT_APP_API_BASE_URL: API_BASE_URL } = process.env;\n\nexport default {\n  API_BASE_URL,\n};\n","import local from './config';\n\nconst get = () => local;\nexport { get };\nexport default get;\n","import QueryString from 'qs';\nimport axios, { AxiosStatic } from 'axios';\nimport * as qs from './qs';\n\nimport * as url from './url';\n\nimport { get } from '../../configuration';\n\nclass HttpClient {\n  private service: AxiosStatic;\n\n  public qs: {\n    parse: (value: string) => QueryString.ParsedQs;\n    stringify: (object: object) => string;\n  };\n\n  public url: {\n    build?: (arg0: [any][] | string) => any;\n    readonly default?: {};\n  };\n\n  constructor() {\n    const config = get();\n    const service = axios;\n    service.defaults.timeout = 20000;\n    service.defaults.baseURL = config.API_BASE_URL;\n    service.defaults.withCredentials = true;\n\n    // registerInterceptor(service);\n    this.service = axios;\n    this.qs = qs;\n    this.url = url;\n  }\n\n  static combine(tempURL: string, queryString: string) {\n    return [tempURL, queryString].join('?');\n  }\n\n  async get(tempURL: string, config: object) {\n    const { service } = this;\n    return service.get(tempURL, config);\n  }\n\n  async delete(tempURL: string, config: object) {\n    const { service } = this;\n    return service.delete(tempURL, config);\n  }\n\n  async head(tempURL: string, config: object) {\n    const { service } = this;\n    return service.head(tempURL, config);\n  }\n\n  async post(tempURL: string, data: object, config: object) {\n    const { service } = this;\n    return service.post(tempURL, data, config);\n  }\n\n  async put(tempURL: string, data: object, config: object) {\n    const { service } = this;\n    return service.put(tempURL, data, config);\n  }\n\n  async patch(tempURL: string, data: object, config: object) {\n    const { service } = this;\n    return service.patch(tempURL, data, config);\n  }\n}\n\nexport default HttpClient;\n","import { AxiosResponse } from 'axios';\nimport BaseService from '../../services/common/BaseService';\nimport { IPost } from './models';\n\nconst getPosts = async (data = {}, query = {}): Promise<IPost[]> => {\n  const baseService = new BaseService();\n  const queryString = baseService.qs.stringify(query);\n  const path = baseService.url.build('posts');\n  const url = BaseService.combine(path, queryString);\n  const response: AxiosResponse<IPost[]> = await baseService.get(url, data);\n  return response.data;\n};\n\nexport { getPosts };\nexport default {};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { IPost } from './models';\nimport { getPosts } from './PostService';\n\ninterface InitialState {\n  isLoading: boolean;\n  postsList: IPost[];\n}\n\nconst initialState: InitialState = {\n  isLoading: false,\n  postsList: [],\n};\nexport const getPostsAsync = createAsyncThunk<IPost[]>(\n  'posts/fetchPosts',\n  async (): Promise<IPost[]> => getPosts(),\n);\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPostsAsync.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.postsList = action.payload;\n      });\n  },\n});\n\nexport default postsSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport type { RootState } from '../../store/store';\n\ninterface CounterState {\n  value: number;\n}\n\nconst initialState: CounterState = {\n  value: 0,\n};\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\nexport const selectCount = (state: RootState) => state.counter.value;\nexport const selectCountWithMessage = (state: RootState) => `Counter state is: ${state.counter.value} `;\n\nexport default counterSlice.reducer;\n","import { AxiosResponse } from 'axios';\nimport BaseService from '../../services/common/BaseService';\nimport { ITodo } from './models';\n\nconst baseService = new BaseService();\n\nconst getTodos = async (data = {}, query = {}): Promise<ITodo[]> => {\n  const queryString = baseService.qs.stringify(query);\n  // @ts-ignore\n  const path = baseService.url.build('todos');\n  const url = BaseService.combine(path, queryString);\n  const response: AxiosResponse<ITodo[]> = await baseService.get(url, data);\n  return response.data;\n};\nexport { getTodos };\nexport default {};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getTodos } from './TodoService';\nimport { ITodo } from './models';\n\ninterface InitialState {\n  isLoading: boolean;\n  todosList: ITodo[];\n}\n\nconst initialState: InitialState = {\n  isLoading: false,\n  todosList: [],\n};\nexport const getTodosAsync = createAsyncThunk<ITodo[]>(\n  'todos/fetchTodos',\n  async (): Promise<ITodo[]> => getTodos(),\n);\n\nconst todosSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getTodosAsync.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getTodosAsync.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.todosList = action.payload;\n      });\n  },\n});\n\nexport default todosSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport postsReducer from '../features/posts/postsSlice';\nimport counterReducer from '../features/counter/counterSlice';\nimport todoReducer from '../features/todos/todoSlice';\nimport postReducer from '../features/sk-posts/PostsSlice';\nimport adminReducer from '../features/admin/AdminSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    posts: postsReducer,\n    todos: todoReducer,\n    postsState: postReducer,\n    adminState: adminReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React, { Suspense } from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { store } from './store/store';\nimport './index.scss';\n\nReactDOM.render(\n  <Suspense fallback=\"loading\">\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </Suspense>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}